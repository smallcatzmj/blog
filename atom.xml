<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>smallcatzmj</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="smallcatzmj.github.io/blog/"/>
  <updated>2019-12-19T08:51:43.695Z</updated>
  <id>smallcatzmj.github.io/blog/</id>
  
  <author>
    <name>ScZmj</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="smallcatzmj.github.io/blog/2019/12/19/%E7%AE%97%E6%B3%95%E7%B3%BB%E5%88%971/"/>
    <id>smallcatzmj.github.io/blog/2019/12/19/算法系列1/</id>
    <published>2019-12-19T13:02:18.412Z</published>
    <updated>2019-12-19T08:51:43.695Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我爱学算法"><a href="#我爱学算法" class="headerlink" title="我爱学算法"></a>我爱学算法</h1><h2 id="1-时间复杂度"><a href="#1-时间复杂度" class="headerlink" title="1.时间复杂度"></a>1.时间复杂度</h2><p>数据规模：1second之内解决问题：</p><p>O(n^2)的算法可以处理大约10^4级别的数据</p><p>O(n)的算法可以处理大约10^8级别的数据</p><p>O(nlogn)的算法可以处理大约10^7级别的数据</p><p>因为从1一直加到10^8计算机的运行时间大约为0.4s,在1s以内。</p><p>O所表示的是代码执行的平均代码量的上界，前面通常会有一个常数，例如cO(2^n)，有的时候也指平均值。</p><p>O(logn)表示n经过几次除以一个常数的操作后，等于0 或者1等常数，如log10n = O(logn),n一直除以10直到变为1.</p><p>二分查找 log2n =  O(logn) 可由数学式推导：logaN = logab * logbN，logab为一个常数。</p><p>特殊情况：时间复杂度O(sqrt(n))，素数的判断：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> n)</span></span>{    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">2</span> ;x*x <= n; x ++){        </span><br><span class="line">        <span class="keyword">if</span> (n % x == <span class="number">0</span>)            </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;        </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;    }}</span><br></pre></td></tr></tbody></table></figure><h2 id="2-数组中的问题"><a href="#2-数组中的问题" class="headerlink" title="2.数组中的问题"></a>2.数组中的问题</h2><h3 id="①二分查找"><a href="#①二分查找" class="headerlink" title="①二分查找"></a>①二分查找</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr 有序数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n 数组长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> target 目标值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标值的数组下标</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">binarysearch</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> n,<span class="keyword">int</span> target)</span></span>{     </span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>; <span class="keyword">int</span> r = n - <span class="number">1</span>; <span class="comment">//在[l...r]之间寻找目标值     </span></span><br><span class="line">    <span class="keyword">while</span> (l <= r) {          <span class="comment">//l==r,目标依旧在此区间         </span></span><br><span class="line">        <span class="keyword">int</span> mid = (l+r)/<span class="number">2</span>;         </span><br><span class="line">        <span class="keyword">if</span> (arr[mid] == target)             </span><br><span class="line">            <span class="keyword">return</span> mid;         </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (arr[mid] < target)             </span><br><span class="line">            l = mid + <span class="number">1</span>;         </span><br><span class="line">        <span class="keyword">else</span>             </span><br><span class="line">            r = mid - <span class="number">1</span>;     </span><br><span class="line">    }     </span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>; </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>时间复杂度复杂度为O(logn)</p><h3 id="②移动0"><a href="#②移动0" class="headerlink" title="②移动0"></a>②移动0</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">moveZeroes</span><span class="params">(<span class="keyword">int</span> nums[])</span></span>{    </span><br><span class="line">    List<Integer> noZeroElements = <span class="keyword">new</span> ArrayList(); <span class="comment">//定义集合存放非0元素   </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i < nums.length; i++) {        </span><br><span class="line">        <span class="keyword">if</span> (nums[i] != <span class="number">0</span>)            <span class="comment">//遍历数组若为非0数则将其加入集合</span></span><br><span class="line">            noZeroElements.add(nums[i]);    </span><br><span class="line">    }    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = noZeroElements.size(); j < nums.length; j++)            </span><br><span class="line">        noZeroElements.add(<span class="number">0</span>);       <span class="comment">//后续补0</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i < noZeroElements.size(); i++) {        </span><br><span class="line">        nums[i] = noZeroElements.get(i);    <span class="comment">//将集合中的值重新传回数组</span></span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>时间复杂度为O(n),空间复杂度为O(n)</p><p>优化：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">moveZeroes</span><span class="params">(<span class="keyword">int</span> nums[])</span></span>{    <span class="comment">//从[0...k)都为非0元素    </span></span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;<span class="comment">//定义一个从头开始的指针    </span></span><br><span class="line">    <span class="keyword">int</span> swap = <span class="number">0</span>;    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i < nums.length; i++) {        </span><br><span class="line">        <span class="keyword">if</span> (nums[i] != <span class="number">0</span>) {            </span><br><span class="line">            <span class="keyword">if</span> (k != i) {                </span><br><span class="line">                swap = nums[k];                </span><br><span class="line">                nums[k++] = nums[i];                </span><br><span class="line">                nums[i] = swap;            </span><br><span class="line">            }            </span><br><span class="line">            <span class="keyword">else</span> <span class="comment">//i == k,防止自己交换自己                </span></span><br><span class="line">                k++;        </span><br><span class="line">        }    </span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="③移除元素"><a href="#③移除元素" class="headerlink" title="③移除元素"></a>③移除元素</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//[0...k)都是非目标值val</span></span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;<span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i < nums.length; i++) {    </span><br><span class="line">    <span class="keyword">if</span> (nums[i] != val){ <span class="comment">//遍历数组若该数与目标数相等，则交换        </span></span><br><span class="line">        <span class="keyword">if</span> (i != k) {            </span><br><span class="line">            temp = nums[k];            </span><br><span class="line">            nums[k++] = nums[i];            </span><br><span class="line">            nums[i] = temp;        </span><br><span class="line">        }        </span><br><span class="line">        <span class="keyword">else</span>            </span><br><span class="line">            k++;    </span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> k;<span class="comment">//k最后指在第一个目标元素</span></span><br></pre></td></tr></tbody></table></figure><p>③删除数组中的重复项</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="keyword">int</span>[] nums)</span></span>{    </span><br><span class="line">    <span class="keyword">if</span> (nums.length == <span class="number">0</span>)<span class="comment">//若数组为空直接返回0        </span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">1</span>; <span class="comment">//[0...k)为不相同的元素    </span></span><br><span class="line">    <span class="keyword">int</span> temp = <span class="number">0</span>;    </span><br><span class="line">    <span class="keyword">int</span> thenum = nums[<span class="number">0</span>];<span class="comment">//定义临时变量接收不同的元素第一次出现时的值    </span></span><br><span class="line">    <span class="comment">//数组和k指针的初始都从1开始，因为第一个值一定不重复    </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i < nums.length; i++) {        </span><br><span class="line">        <span class="comment">//遍历数组，若出现不同的值就将直接往后排列赋值        </span></span><br><span class="line">        <span class="keyword">if</span> (nums[i] != thenum){            </span><br><span class="line">        thenum = nums[i];<span class="comment">//出现新的数时赋值            </span></span><br><span class="line">        <span class="keyword">if</span> (i != k){            </span><br><span class="line">            nums[k++] = nums[i];<span class="comment">//这里直接赋值，不交换        </span></span><br><span class="line">        }<span class="keyword">else</span>              </span><br><span class="line">            k++;        </span><br><span class="line">    }    </span><br><span class="line">}    </span><br><span class="line"><span class="keyword">return</span> k;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>④删除数组中的重复项Ⅱ</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(nums.length == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">1</span>; <span class="keyword">int</span> thenum = nums[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;<span class="comment">//1表示还可以遇到该数一次，0表示不可以</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i < nums.length;i ++) {</span><br><span class="line"><span class="keyword">if</span>(nums[i] == thenum && flag == <span class="number">1</span>) {</span><br><span class="line">nums[k++] = nums[i]; </span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(nums[i] != thenum) {</span><br><span class="line">thenum = nums[i];</span><br><span class="line"><span class="keyword">if</span>(i != k) {</span><br><span class="line">nums[k++] = nums[i];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">k++;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> k;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>⑤颜色分类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sortColors</span><span class="params">(<span class="keyword">int</span> nums[])</span></span>{    </span><br><span class="line"><span class="keyword">int</span> temp = <span class="number">0</span>;    </span><br><span class="line"><span class="keyword">int</span> zero = -<span class="number">1</span>; <span class="comment">//nums[0...zero] == 0    </span></span><br><span class="line"><span class="keyword">int</span> two = nums.length; <span class="comment">//nums[two...n-1] == 2    </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i < two;) {        </span><br><span class="line"><span class="keyword">if</span> (nums[i] == <span class="number">1</span>)            </span><br><span class="line">i++;        </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (nums[i] == <span class="number">0</span>){            </span><br><span class="line">zero++;            </span><br><span class="line">temp = nums[zero];            </span><br><span class="line">nums[zero] = nums[i];            </span><br><span class="line">nums[i] = temp;            </span><br><span class="line">i++;        </span><br><span class="line">}        </span><br><span class="line"><span class="keyword">else</span>{<span class="comment">//若该数为2，将前面换过来的数进行原地判断            </span></span><br><span class="line">two--;            </span><br><span class="line">temp = nums[two];            </span><br><span class="line">nums[two] = nums[i];            </span><br><span class="line">nums[i] = temp;        </span><br><span class="line">}    </span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>⑥合并有序数组</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] nums1,<span class="keyword">int</span> m,<span class="keyword">int</span> nums2[],<span class="keyword">int</span> n)</span></span>{</span><br><span class="line"><span class="keyword">int</span> p1 = m - <span class="number">1</span>;  <span class="comment">//nums1[0...p1]为数组1待排列的数</span></span><br><span class="line"><span class="keyword">int</span> p2 = n - <span class="number">1</span>;  <span class="comment">//nums2[o...p2]为数组2待排列的数</span></span><br><span class="line"><span class="keyword">int</span> p = m + n - <span class="number">1</span>; <span class="comment">//p为数组1的尾指针</span></span><br><span class="line"><span class="keyword">while</span>(p1 >= <span class="number">0</span> && p2 >= <span class="number">0</span>){<span class="comment">//遍历比较两个数组的值，直到一个数组遍历完    </span></span><br><span class="line">    <span class="keyword">if</span> (nums1[p1] >= nums2[p2]){        </span><br><span class="line">        nums1[p] = nums1[p1];         </span><br><span class="line">        p -- ; p1 --;    </span><br><span class="line">    }<span class="keyword">else</span> {        </span><br><span class="line">        nums1[p] = nums2[p2];         </span><br><span class="line">        p -- ; p2 --;    </span><br><span class="line">    }</span><br><span class="line">}<span class="keyword">while</span> (p2 >= <span class="number">0</span>)<span class="comment">//数组1优先遍历完，将数组2中的剩余值传入数组1      </span></span><br><span class="line">    nums1[p--] = nums2[p2--];</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;我爱学算法&quot;&gt;&lt;a href=&quot;#我爱学算法&quot; class=&quot;headerlink&quot; title=&quot;我爱学算法&quot;&gt;&lt;/a&gt;我爱学算法&lt;/h1&gt;&lt;h2 id=&quot;1-时间复杂度&quot;&gt;&lt;a href=&quot;#1-时间复杂度&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
  </entry>
  
</feed>
